name: Tests

on:
  push:
    branches: [master]
    paths-ignore:
      - "*.md"
      - "*.json"
      - "*.sol"
      - "docs/**"
      - ".gitignore"
      - ".travis.yml"
      - "cargo_fmt.sh"
      - "CODEOWNERS"
  pull_request:
    branches: [master]
    paths-ignore:
      - "*.md"
      - "*.json"
      - "*.sol"
      - "docs/**"
      - ".gitignore"
      - ".travis.yml"
      - "cargo_fmt.sh"
      - "CODEOWNERS"

jobs:
  check-crates:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Cargo Cache
        uses: ./.github/actions/setup-cargo-cache

      - name: Cache debug build artifacts
        uses: actions/cache@v4
        with:
          path: |
            target/debug/deps
            target/debug/.fingerprint
            target/debug/build
            !target/debug/build/**/out
            !target/debug/deps/librust_verify*
            !target/debug/incremental
            !target/debug/.cargo-lock
          key: ${{ runner.os }}-build-crates-debug-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-crates-debug-

      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies

      - name: Check individual crates
        run: |
          ./dev-support/check-crates.sh

      - name: Check workspace
        env:
          RUSTFLAGS: -D warnings
        run: |
          cargo check --all --locked

  workspace-tests:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Free up space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android

      - name: Setup Cargo Cache
        uses: ./.github/actions/setup-cargo-cache

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: |
            target/release/deps
            target/release/.fingerprint
            target/release/build
            !target/release/build/**/out
            !target/release/incremental
            !target/release/.cargo-lock
          key: ${{ runner.os }}-build-workspace-release-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-workspace-release-

      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies

      - name: Run build bench
        env:
            RUSTFLAGS: -D warnings
        run: |
          cargo bench --all --no-run

      - name: Run workspace tests
        env:
          RUSTFLAGS: -D warnings
        run: |
          cargo install cargo-nextest --version "0.9.85" --locked
          cargo nextest run --no-fail-fast --release --workspace

  cfx-addr-tests:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Free up space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android

      - name: Setup Cargo Cache
        uses: ./.github/actions/setup-cargo-cache

      - name: Cache debug build artifacts
        uses: actions/cache@v4
        with:
          path: |
            target/debug/deps
            target/debug/.fingerprint
            target/debug/build
            !target/debug/build/**/out
            !target/debug/deps/librust_verify*
            !target/debug/incremental
            !target/debug/.cargo-lock
          key: ${{ runner.os }}-build-addr-debug-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-addr-debug-

      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies

      - name: Run cfx-addr
        env:
          RUSTFLAGS: -D warnings
        run: |
          cargo install cargo-nextest --version "0.9.85" --locked
          cargo nextest run --no-fail-fast -p cfx-addr --no-default-features

  build-documentation:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Cargo Cache
        uses: ./.github/actions/setup-cargo-cache

      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies

      - name: Run build documentation
        env:
          CMAKE_POLICY_VERSION_MINIMUM: 3.5
        run: |
          cargo doc --document-private-items

  evm-spec-tests:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Free up space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android

      - name: Setup Cargo Cache
        uses: ./.github/actions/setup-cargo-cache

      - name: Cache release artifacts
        uses: actions/cache@v4
        with:
          path: |
            tools/evm-spec-tester/target/release/deps
            tools/evm-spec-tester/target/release/.fingerprint
            tools/evm-spec-tester/target/release/build
            !tools/evm-spec-tester/target/release/build/**/out
            !tools/evm-spec-tester/target/release/incremental
            !tools/evm-spec-tester/target/release/.cargo-lock
          key: ${{ runner.os }}-build-evm-spec-tester-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-evm-spec-tester-

      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies

      - name: Install zstd
        run: sudo apt-get install -y zstd

      - name: Extract test data
        working-directory: ./testdata
        run: tar --use-compress-program="zstd --long=31" -xvf evm-spec-test.tar.zst

      - name: Build in release mode
        working-directory: ./tools/evm-spec-tester
        env:
          RUSTFLAGS: -D warnings
        run: cargo build --release --locked

      - name: Run EVM spec tests
        working-directory: ./tools/evm-spec-tester
        run: cargo run --release -- statetest ../../testdata/evm-spec-test

  consensus-bench-test:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Free up space
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android

      - name: Setup Cargo Cache
        uses: ./.github/actions/setup-cargo-cache

      - name: Cache release artifacts
        uses: actions/cache@v4
        with:
          path: |
            tools/consensus_bench/target/debug/deps
            tools/consensus_bench/target/debug/.fingerprint
            tools/consensus_bench/target/debug/build
            !tools/consensus_bench/target/debug/build/**/out
            !tools/consensus_bench/target/debug/incremental
            !tools/consensus_bench/target/debug/.cargo-lock
          key: ${{ runner.os }}-consensus-bench-test-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-consensus-bench-test-

      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies

      - name: Run build
        working-directory: ./tools/consensus_bench
        env:
          RUSTFLAGS: -D warnings
        run: |
          cargo check --locked
          
